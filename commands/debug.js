const { EmbedBuilder } = require('discord.js');
const { checkCommandPermissions } = require('../utils/permissions');
const config = require('../config.json');

/**
 * Debug command ƒë·ªÉ ki·ªÉm tra channel v√† bot info
 * Ch·ªâ cho ph√©p users c√≥ allowed roles s·ª≠ d·ª•ng
 * @param {Interaction} interaction - Discord interaction
 * @param {Client} client - Discord client
 */
async function handleSlashDebug(interaction, client) {
  console.log(`L·ªánh debug ƒë∆∞·ª£c g·ªçi b·ªüi ${interaction.user.tag}`);

  // Defer reply ƒë·ªÉ tr√°nh timeout
  await interaction.deferReply({ flags: 1 << 6 });

  // Ki·ªÉm tra permissions - y√™u c·∫ßu role, kh√¥ng y√™u c·∫ßu channel c·ª• th·ªÉ
  const permissionCheck = checkCommandPermissions(interaction, {
    requireChannel: false, // Debug c√≥ th·ªÉ d√πng ·ªü b·∫•t k·ª≥ ƒë√¢u
    requireRole: true      // Nh∆∞ng c·∫ßn c√≥ role ƒë∆∞·ª£c ph√©p
  });

  if (!permissionCheck.allowed) {
    console.log(`T·ª´ ch·ªëi quy·ªÅn debug cho ${interaction.user.tag}: ${permissionCheck.reason}`);
    return await interaction.editReply({
      content: permissionCheck.reason
    });
  }

  try {
    console.log(`üîç Starting debug response...`);
    
    const channelId = interaction.channel.id;
    const guildId = interaction.guild?.id || 'DM';
    const userId = interaction.user.id;
    const isAllowedChannel = config.allowedChannels?.includes(channelId);
    const hasAllowedRole = interaction.member?.roles.cache.some(role => 
      config.allowedRoles.includes(role.id)
    );
    
    const embed = new EmbedBuilder()
      .setColor('#00ff00')
      .setTitle('üîç Debug Information')
      .addFields(
        { name: 'Channel ID', value: `\`${channelId}\``, inline: true },
        { name: 'Guild ID', value: `\`${guildId}\``, inline: true },
        { name: 'User ID', value: `\`${userId}\``, inline: true },
        { name: 'Allowed Channel?', value: isAllowedChannel ? '‚úÖ Yes' : '‚ùå No', inline: true },
        { name: 'Has Allowed Role?', value: hasAllowedRole ? '‚úÖ Yes' : '‚ùå No', inline: true },
        { name: 'Bot Status', value: client.isReady() ? '‚úÖ Ready' : '‚ùå Not Ready', inline: true },
        { name: 'Allowed Channels', value: config.allowedChannels?.map(id => `\`${id}\``).join('\n') || 'None', inline: false },
        { name: 'Allowed Roles', value: config.allowedRoles?.map(id => `\`${id}\``).join('\n') || 'None', inline: false }
      )
      .setTimestamp()
      .setFooter({ text: `Requested by ${interaction.user.tag}` });

    await interaction.editReply({
      embeds: [embed]
    });

    console.log(`‚úÖ Debug response sent successfully`);
  } catch (error) {
    console.error('‚ùå Debug command error:', error);
    await interaction.editReply({
      content: 'L·ªói khi th·ª±c hi·ªán debug command'
    });
  }
}

module.exports = {
  handleSlashDebug
};
